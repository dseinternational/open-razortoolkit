<CascadingValue Value="this">
    <ol class="stepper my-auto @(StepIndicator.Orientation == Orientation.Vertical ? "stepper-vertical" : "")">
        @ChildContent
    </ol>
</CascadingValue>

@code {
    [CascadingParameter]
    private StepIndicator StepIndicator { get; set; } = default!;

    [Parameter]
    public RenderFragment ChildContent { get; set; } = default!;

    /// <summary>
    /// The 0-based index of the highest active step.
    /// </summary>
    [Parameter]
    public int ActiveIndex { get; set; }

    public ICollection<IStep> Steps { get; } = new List<IStep>();

    public IStep ActiveStep { get; private set; } = default!;

    public void AddStep(IStep step)
    {
        Steps.Add(step);

        if (ActiveStep == null)
        {
            SetActiveStep(step);
        }
    }

    public void SetActiveStep(IStep step)
    {
        if (ActiveStep != step)
        {
            ActiveStep = step;
            StateHasChanged();
        }
    }

    protected override void OnInitialized()
    {
        if (StepIndicator == null)
        {
            throw new ArgumentNullException(nameof(StepIndicator), "StepperSteps must exist within a Stepper.");
        }

        base.OnInitialized();
    }
}
